{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { BraintreeHostedFields } from 'braintree-web-react';\nimport FormValidator from '../formValidator';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\nimport 'filepond/dist/filepond.min.css';\nimport '../static/css/profilepicture.css';\nregisterPlugin(FilePondPluginImagePreview);\nvar Picture = styled.img.withConfig({\n  displayName: \"payment__Picture\",\n  componentId: \"sc-1xmtiu3-0\"\n})([\"border-radius:50%;border:3px solid white;width:100px;\"]);\n\nvar ProfileEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileEdit, _React$Component);\n\n  _createClass(ProfileEdit, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var clientToken;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                clientToken = null; // Get a client token for authorization from your server\n\n                _context.next = 3;\n                return fetch('http://localhost:3000/api/braintree/v1/getToken', {\n                  method: 'GET',\n                  credentials: 'include'\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (jso) {\n                  clientToken = jso.clientToken;\n                });\n\n              case 3:\n                return _context.abrupt(\"return\", {\n                  clientToken: clientToken\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function ProfileEdit(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileEdit).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      e.preventDefault();\n\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      var validation = _this.validator.validate(_this.state);\n\n      _this.setState({\n        validation: validation\n      });\n\n      _this.submitted = true;\n\n      var req = _this.instance.tokenize();\n\n      if (validation.isValid) {\n        if (!_this.state.payment) {\n          fetch('http://localhost:3000/api/braintree/v1/create_customer', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: {\n              nonce: req.nonce,\n              firstName: _this.state.firstName,\n              lastName: _this.state.lastName,\n              streetAddress: _this.state.streetAddress,\n              locality: _this.state.city,\n              region: _this.state.region,\n              postalCode: _this.state.postalCode\n            }\n          });\n        } else {\n          fetch('http://localhost:3000/api/braintree/v1/update_customer', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: {\n              nonce: req.nonce,\n              firstName: _this.state.firstName,\n              lastName: _this.state.lastName,\n              streetAddress: _this.state.streetAddress,\n              locality: _this.state.city,\n              region: _this.state.region,\n              postalCode: _this.state.postalCode\n            }\n          });\n        }\n\n        var bearer = 'Bearer ' + \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik5FUkRPREE1TlRCRk5UTkdRMFUwTVRVek1qaEZPVVF3T0RkRFFUTTVOa1ZGTlRaRk56azVSZyJ9.eyJpc3MiOiJodHRwczovL2Rldi1sdXFtNnV0eS5hdXRoMC5jb20vIiwic3ViIjoidTFTcU02MVRTenFMZzJFcndGbUlyN1VkMTA2ckFKVTBAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vZGV2LWx1cW02dXR5LmF1dGgwLmNvbS9hcGkvdjIvIiwiaWF0IjoxNTY0MDg4NzAwLCJleHAiOjE1NjQxNzUxMDAsImF6cCI6InUxU3FNNjFUU3pxTGcyRXJ3Rm1JcjdVZDEwNnJBSlUwIiwic2NvcGUiOiJyZWFkOmNsaWVudF9ncmFudHMgY3JlYXRlOmNsaWVudF9ncmFudHMgZGVsZXRlOmNsaWVudF9ncmFudHMgdXBkYXRlOmNsaWVudF9ncmFudHMgcmVhZDp1c2VycyB1cGRhdGU6dXNlcnMgZGVsZXRlOnVzZXJzIGNyZWF0ZTp1c2VycyByZWFkOnVzZXJzX2FwcF9tZXRhZGF0YSB1cGRhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGRlbGV0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBjcmVhdGU6dXNlcl90aWNrZXRzIHJlYWQ6Y2xpZW50cyB1cGRhdGU6Y2xpZW50cyBkZWxldGU6Y2xpZW50cyBjcmVhdGU6Y2xpZW50cyByZWFkOmNsaWVudF9rZXlzIHVwZGF0ZTpjbGllbnRfa2V5cyBkZWxldGU6Y2xpZW50X2tleXMgY3JlYXRlOmNsaWVudF9rZXlzIHJlYWQ6Y29ubmVjdGlvbnMgdXBkYXRlOmNvbm5lY3Rpb25zIGRlbGV0ZTpjb25uZWN0aW9ucyBjcmVhdGU6Y29ubmVjdGlvbnMgcmVhZDpyZXNvdXJjZV9zZXJ2ZXJzIHVwZGF0ZTpyZXNvdXJjZV9zZXJ2ZXJzIGRlbGV0ZTpyZXNvdXJjZV9zZXJ2ZXJzIGNyZWF0ZTpyZXNvdXJjZV9zZXJ2ZXJzIHJlYWQ6ZGV2aWNlX2NyZWRlbnRpYWxzIHVwZGF0ZTpkZXZpY2VfY3JlZGVudGlhbHMgZGVsZXRlOmRldmljZV9jcmVkZW50aWFscyBjcmVhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIHJlYWQ6cnVsZXMgdXBkYXRlOnJ1bGVzIGRlbGV0ZTpydWxlcyBjcmVhdGU6cnVsZXMgcmVhZDpydWxlc19jb25maWdzIHVwZGF0ZTpydWxlc19jb25maWdzIGRlbGV0ZTpydWxlc19jb25maWdzIHJlYWQ6ZW1haWxfcHJvdmlkZXIgdXBkYXRlOmVtYWlsX3Byb3ZpZGVyIGRlbGV0ZTplbWFpbF9wcm92aWRlciBjcmVhdGU6ZW1haWxfcHJvdmlkZXIgYmxhY2tsaXN0OnRva2VucyByZWFkOnN0YXRzIHJlYWQ6dGVuYW50X3NldHRpbmdzIHVwZGF0ZTp0ZW5hbnRfc2V0dGluZ3MgcmVhZDpsb2dzIHJlYWQ6c2hpZWxkcyBjcmVhdGU6c2hpZWxkcyBkZWxldGU6c2hpZWxkcyByZWFkOmFub21hbHlfYmxvY2tzIGRlbGV0ZTphbm9tYWx5X2Jsb2NrcyB1cGRhdGU6dHJpZ2dlcnMgcmVhZDp0cmlnZ2VycyByZWFkOmdyYW50cyBkZWxldGU6Z3JhbnRzIHJlYWQ6Z3VhcmRpYW5fZmFjdG9ycyB1cGRhdGU6Z3VhcmRpYW5fZmFjdG9ycyByZWFkOmd1YXJkaWFuX2Vucm9sbG1lbnRzIGRlbGV0ZTpndWFyZGlhbl9lbnJvbGxtZW50cyBjcmVhdGU6Z3VhcmRpYW5fZW5yb2xsbWVudF90aWNrZXRzIHJlYWQ6dXNlcl9pZHBfdG9rZW5zIGNyZWF0ZTpwYXNzd29yZHNfY2hlY2tpbmdfam9iIGRlbGV0ZTpwYXNzd29yZHNfY2hlY2tpbmdfam9iIHJlYWQ6Y3VzdG9tX2RvbWFpbnMgZGVsZXRlOmN1c3RvbV9kb21haW5zIGNyZWF0ZTpjdXN0b21fZG9tYWlucyByZWFkOmVtYWlsX3RlbXBsYXRlcyBjcmVhdGU6ZW1haWxfdGVtcGxhdGVzIHVwZGF0ZTplbWFpbF90ZW1wbGF0ZXMgcmVhZDptZmFfcG9saWNpZXMgdXBkYXRlOm1mYV9wb2xpY2llcyByZWFkOnJvbGVzIGNyZWF0ZTpyb2xlcyBkZWxldGU6cm9sZXMgdXBkYXRlOnJvbGVzIHJlYWQ6cHJvbXB0cyB1cGRhdGU6cHJvbXB0cyByZWFkOmJyYW5kaW5nIHVwZGF0ZTpicmFuZGluZyIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyJ9.X4yHzULntm8SLMOhIAn8oKRhCqFM7iy0DpTBS2Dz6RPwK8F0MKdYwTBPlmzzQtwRR9pt-3ewdtz5OzZRBGoD7mgzorNyKbOroGuXdYNvVutBbdWKu3cIjfEQDU_7s6N4GmT7XZzI36u_4vyRr6chCXz9RCxvupFtP0UMx5OYhIeWeuaqBh43nSjlNd5xWohkXcHTYj6XPrMH73DHN_ZhmdqPDs8j1I9XWwrjlV_Fu034DXhgka4QHu5yvpE2ftuR2VhNsyrDAU3Aep9S1DHOUUdS4eZmyx-rhLqI49U4B6D8opmxnLwGA67Iqh-HgEsx3Gbx5iZ_jkD32J2ABzY7Pg\";\n        var update = 'https://dev-luqm6uty.auth0.com/api/v2/users/';\n        update += _this.props.user.user_id;\n        fetch(update, {\n          mode: 'cors',\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'authorization': bearer,\n            'accept': 'application/json'\n          },\n          body: {\n            \"user_metadata\": {\n              'braintree': _this.state.payment\n            }\n          },\n          credentials: \"include\"\n        });\n      }\n    });\n\n    _this.submitted = false;\n    _this.validator = new FormValidator([]);\n    _this.state = {\n      //payment: this.props.user.user_metadata,\n      //firstName: this.props.user.family_name,\n      //lastName: this.props.user.given_name,\n      validation: _this.validator.valid(),\n      streetAddress: '',\n      postalCode: '',\n      city: '',\n      region: ''\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProfileEdit, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var validation = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n      return React.createElement(\"div\", {\n        className: \"container\"\n      }, React.createElement(\"h1\", null, \"Edit Your Profile\"), React.createElement(BraintreeHostedFields, {\n        className: \"drop-in-container\",\n        options: {\n          authorization: this.props.clientToken\n        },\n        onInstance: function onInstance(instance) {\n          return _this2.instance = instance;\n        }\n      }, React.createElement(\"form\", {\n        id: \"cardForm\",\n        onSubmit: this.handleSubmit\n      }, React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", null, \"First Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Enter First Name Here\",\n        value: this.state.firstName,\n        onChange: this.handleChange\n      })), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", null, \"Last Name:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"Enter Last Name Here\",\n        value: this.state.lastName,\n        onChange: this.handleChange\n      })), React.createElement(\"label\", {\n        className: \"hosted-fields--label\"\n      }, \"Card Number\"), React.createElement(\"div\", {\n        id: \"card-number\",\n        className: \"hosted-field\"\n      }), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", null, \"Street Number:\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"11111 xxxxx\",\n        value: this.state.streetAddress,\n        onChange: this.handleChange\n      })), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", null, \"City\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"City\",\n        value: this.state.city,\n        onChange: this.handleChange\n      })), React.createElement(\"div\", {\n        className: \"form-group\"\n      }, React.createElement(\"label\", null, \"State\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"form-control\",\n        placeholder: \"State: ie. Maine\",\n        value: this.state.region,\n        onChange: this.handleChange\n      })), React.createElement(\"label\", {\n        className: \"hosted-fields--label\"\n      }, \"Postal Code\"), React.createElement(\"div\", {\n        id: \"postal-code\",\n        className: \"hosted-field\"\n      }), React.createElement(\"label\", {\n        className: \"hosted-fields--label\"\n      }, \"Expiration Date\"), React.createElement(\"div\", {\n        id: \"expiration-date\",\n        className: \"hosted-field\"\n      }), React.createElement(\"label\", {\n        className: \"hosted-fields--label\"\n      }, \"CVV\"), React.createElement(\"div\", {\n        id: \"cvv\",\n        className: \"hosted-field\"\n      }), React.createElement(\"input\", {\n        className: \"btn btn-dark\",\n        type: \"submit\",\n        value: \"Save Changes\"\n      }))));\n    }\n  }]);\n\n  return ProfileEdit;\n}(React.Component);\n\nexport default ProfileEdit;","map":null,"metadata":{},"sourceType":"module"}