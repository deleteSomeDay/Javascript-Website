{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\dev\\\\TutorFinal\\\\web\\\\pages\\\\payment.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { BraintreeHostedFields } from 'braintree-web-react';\nimport FormValidator from '../formValidator';\nimport { FilePond, registerPlugin } from 'react-filepond';\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\nimport 'filepond/dist/filepond.min.css';\nimport '../static/css/profilepicture.css';\nregisterPlugin(FilePondPluginImagePreview);\nvar Picture = styled.img.withConfig({\n  displayName: \"payment__Picture\",\n  componentId: \"sc-1xmtiu3-0\"\n})([\"border-radius:50%;border:3px solid white;width:100px;\"]);\n\nvar ProfileEdit =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ProfileEdit, _React$Component);\n\n  _createClass(ProfileEdit, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var clientToken;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                clientToken = null; // Get a client token for authorization from your server\n\n                _context.next = 3;\n                return fetch('http://localhost:3000/api/braintree/v1/getToken', {\n                  method: 'GET',\n                  credentials: 'include'\n                }).then(function (response) {\n                  return response.json();\n                }).then(function (jso) {\n                  clientToken = jso.clientToken;\n                });\n\n              case 3:\n                return _context.abrupt(\"return\", {\n                  clientToken: clientToken\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function ProfileEdit(props) {\n    var _this;\n\n    _classCallCheck(this, ProfileEdit);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ProfileEdit).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      e.preventDefault();\n\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (e) {\n      e.preventDefault();\n\n      var validation = _this.validator.validate(_this.state);\n\n      _this.setState({\n        validation: validation\n      });\n\n      _this.submitted = true;\n\n      var req = _this.instance.tokenize();\n\n      if (validation.isValid) {\n        if (!_this.state.payment) {\n          fetch('http://localhost:3000/api/braintree/v1/create_customer', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: {\n              nonce: req.nonce,\n              postalCode: _this.state.postalCode\n            }\n          });\n        } else {\n          fetch('http://localhost:3000/api/braintree/v1/update_customer', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: {\n              nonce: req.nonce,\n              postalCode: _this.state.postalCode\n            }\n          });\n        }\n\n        var bearer = 'Bearer ' + \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik5FUkRPREE1TlRCRk5UTkdRMFUwTVRVek1qaEZPVVF3T0RkRFFUTTVOa1ZGTlRaRk56azVSZyJ9.eyJpc3MiOiJodHRwczovL2Rldi1sdXFtNnV0eS5hdXRoMC5jb20vIiwic3ViIjoidTFTcU02MVRTenFMZzJFcndGbUlyN1VkMTA2ckFKVTBAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vZGV2LWx1cW02dXR5LmF1dGgwLmNvbS9hcGkvdjIvIiwiaWF0IjoxNTY0MDg4NzAwLCJleHAiOjE1NjQxNzUxMDAsImF6cCI6InUxU3FNNjFUU3pxTGcyRXJ3Rm1JcjdVZDEwNnJBSlUwIiwic2NvcGUiOiJyZWFkOmNsaWVudF9ncmFudHMgY3JlYXRlOmNsaWVudF9ncmFudHMgZGVsZXRlOmNsaWVudF9ncmFudHMgdXBkYXRlOmNsaWVudF9ncmFudHMgcmVhZDp1c2VycyB1cGRhdGU6dXNlcnMgZGVsZXRlOnVzZXJzIGNyZWF0ZTp1c2VycyByZWFkOnVzZXJzX2FwcF9tZXRhZGF0YSB1cGRhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGRlbGV0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBjcmVhdGU6dXNlcl90aWNrZXRzIHJlYWQ6Y2xpZW50cyB1cGRhdGU6Y2xpZW50cyBkZWxldGU6Y2xpZW50cyBjcmVhdGU6Y2xpZW50cyByZWFkOmNsaWVudF9rZXlzIHVwZGF0ZTpjbGllbnRfa2V5cyBkZWxldGU6Y2xpZW50X2tleXMgY3JlYXRlOmNsaWVudF9rZXlzIHJlYWQ6Y29ubmVjdGlvbnMgdXBkYXRlOmNvbm5lY3Rpb25zIGRlbGV0ZTpjb25uZWN0aW9ucyBjcmVhdGU6Y29ubmVjdGlvbnMgcmVhZDpyZXNvdXJjZV9zZXJ2ZXJzIHVwZGF0ZTpyZXNvdXJjZV9zZXJ2ZXJzIGRlbGV0ZTpyZXNvdXJjZV9zZXJ2ZXJzIGNyZWF0ZTpyZXNvdXJjZV9zZXJ2ZXJzIHJlYWQ6ZGV2aWNlX2NyZWRlbnRpYWxzIHVwZGF0ZTpkZXZpY2VfY3JlZGVudGlhbHMgZGVsZXRlOmRldmljZV9jcmVkZW50aWFscyBjcmVhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIHJlYWQ6cnVsZXMgdXBkYXRlOnJ1bGVzIGRlbGV0ZTpydWxlcyBjcmVhdGU6cnVsZXMgcmVhZDpydWxlc19jb25maWdzIHVwZGF0ZTpydWxlc19jb25maWdzIGRlbGV0ZTpydWxlc19jb25maWdzIHJlYWQ6ZW1haWxfcHJvdmlkZXIgdXBkYXRlOmVtYWlsX3Byb3ZpZGVyIGRlbGV0ZTplbWFpbF9wcm92aWRlciBjcmVhdGU6ZW1haWxfcHJvdmlkZXIgYmxhY2tsaXN0OnRva2VucyByZWFkOnN0YXRzIHJlYWQ6dGVuYW50X3NldHRpbmdzIHVwZGF0ZTp0ZW5hbnRfc2V0dGluZ3MgcmVhZDpsb2dzIHJlYWQ6c2hpZWxkcyBjcmVhdGU6c2hpZWxkcyBkZWxldGU6c2hpZWxkcyByZWFkOmFub21hbHlfYmxvY2tzIGRlbGV0ZTphbm9tYWx5X2Jsb2NrcyB1cGRhdGU6dHJpZ2dlcnMgcmVhZDp0cmlnZ2VycyByZWFkOmdyYW50cyBkZWxldGU6Z3JhbnRzIHJlYWQ6Z3VhcmRpYW5fZmFjdG9ycyB1cGRhdGU6Z3VhcmRpYW5fZmFjdG9ycyByZWFkOmd1YXJkaWFuX2Vucm9sbG1lbnRzIGRlbGV0ZTpndWFyZGlhbl9lbnJvbGxtZW50cyBjcmVhdGU6Z3VhcmRpYW5fZW5yb2xsbWVudF90aWNrZXRzIHJlYWQ6dXNlcl9pZHBfdG9rZW5zIGNyZWF0ZTpwYXNzd29yZHNfY2hlY2tpbmdfam9iIGRlbGV0ZTpwYXNzd29yZHNfY2hlY2tpbmdfam9iIHJlYWQ6Y3VzdG9tX2RvbWFpbnMgZGVsZXRlOmN1c3RvbV9kb21haW5zIGNyZWF0ZTpjdXN0b21fZG9tYWlucyByZWFkOmVtYWlsX3RlbXBsYXRlcyBjcmVhdGU6ZW1haWxfdGVtcGxhdGVzIHVwZGF0ZTplbWFpbF90ZW1wbGF0ZXMgcmVhZDptZmFfcG9saWNpZXMgdXBkYXRlOm1mYV9wb2xpY2llcyByZWFkOnJvbGVzIGNyZWF0ZTpyb2xlcyBkZWxldGU6cm9sZXMgdXBkYXRlOnJvbGVzIHJlYWQ6cHJvbXB0cyB1cGRhdGU6cHJvbXB0cyByZWFkOmJyYW5kaW5nIHVwZGF0ZTpicmFuZGluZyIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyJ9.X4yHzULntm8SLMOhIAn8oKRhCqFM7iy0DpTBS2Dz6RPwK8F0MKdYwTBPlmzzQtwRR9pt-3ewdtz5OzZRBGoD7mgzorNyKbOroGuXdYNvVutBbdWKu3cIjfEQDU_7s6N4GmT7XZzI36u_4vyRr6chCXz9RCxvupFtP0UMx5OYhIeWeuaqBh43nSjlNd5xWohkXcHTYj6XPrMH73DHN_ZhmdqPDs8j1I9XWwrjlV_Fu034DXhgka4QHu5yvpE2ftuR2VhNsyrDAU3Aep9S1DHOUUdS4eZmyx-rhLqI49U4B6D8opmxnLwGA67Iqh-HgEsx3Gbx5iZ_jkD32J2ABzY7Pg\";\n        var update = 'https://dev-luqm6uty.auth0.com/api/v2/users/';\n        update += _this.props.user.user_id;\n        fetch(update, {\n          mode: 'cors',\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n            'authorization': bearer,\n            'accept': 'application/json'\n          },\n          body: {\n            \"user_metadata\": {\n              'braintree': _this.state.payment\n            }\n          },\n          credentials: \"include\"\n        });\n      }\n    });\n\n    _this.submitted = false;\n    _this.validator = new FormValidator([{\n      field: 'email',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Email is required.'\n    }, {\n      field: 'email',\n      method: 'isEmail',\n      validWhen: true,\n      message: 'That is not a valid email.'\n    }, {\n      field: 'picture',\n      method: 'isEmpty',\n      validWhen: false,\n      message: 'Please provide a profile picture'\n    }]);\n    _this.state = {\n      payment: _this.props.user.user_metadata,\n      validation: _this.validator.valid()\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(ProfileEdit, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var validation = this.submitted ? this.validator.validate(this.state) : this.state.validation;\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Payment Information:\"), React.createElement(BraintreeHostedFields, {\n        className: \"drop-in-container\",\n        options: {\n          authorization: this.props.clientToken\n        },\n        onInstance: function onInstance(instance) {\n          return _this2.instance = instance;\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        id: \"cardForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"hosted-fields--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"Card Number\"), React.createElement(\"div\", {\n        id: \"card-number\",\n        className: \"hosted-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"hosted-fields--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Expiration Date\"), React.createElement(\"div\", {\n        id: \"expiration-date\",\n        className: \"hosted-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"hosted-fields--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"CVV\"), React.createElement(\"div\", {\n        id: \"cvv\",\n        className: \"hosted-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        className: \"hosted-fields--label\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Postal Code\"), React.createElement(\"div\", {\n        id: \"postal-code\",\n        className: \"hosted-field\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"btn btn-dark\",\n        type: \"submit\",\n        value: \"Save Changes\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return ProfileEdit;\n}(React.Component);\n\nexport default ProfileEdit;","map":{"version":3,"sources":["D:\\dev\\TutorFinal\\web\\pages\\payment.js"],"names":["styled","BraintreeHostedFields","FormValidator","FilePond","registerPlugin","FilePondPluginImagePreview","Picture","img","ProfileEdit","clientToken","fetch","method","credentials","then","response","json","jso","props","e","preventDefault","setState","target","name","value","validation","validator","validate","state","submitted","req","instance","tokenize","isValid","payment","headers","body","nonce","postalCode","bearer","update","user","user_id","mode","field","validWhen","message","user_metadata","valid","handleChange","bind","handleSubmit","authorization","React","Component"],"mappings":"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","sourcesContent":["import styled from \"styled-components\";\r\nimport { BraintreeHostedFields } from 'braintree-web-react';\r\nimport FormValidator from '../formValidator'\r\nimport { FilePond, registerPlugin } from 'react-filepond';\r\nimport FilePondPluginImagePreview from 'filepond-plugin-image-preview';\r\nimport 'filepond-plugin-image-preview/dist/filepond-plugin-image-preview.min.css';\r\nimport 'filepond/dist/filepond.min.css';\r\nimport '../static/css/profilepicture.css'\r\n\r\nregisterPlugin(FilePondPluginImagePreview);\r\n\r\nconst Picture = styled.img`\r\nborder-radius: 50%;\r\nborder: 3px solid white;\r\nwidth: 100px;\r\n`;\r\n\r\n\r\nclass ProfileEdit extends React.Component {\r\n    static async getInitialProps() {\r\n        var clientToken = null;\r\n        // Get a client token for authorization from your server\r\n        await fetch('http://localhost:3000/api/braintree/v1/getToken', { method: 'GET', credentials: 'include' })\r\n            .then(response => response.json())\r\n            .then(jso => { clientToken = jso.clientToken })\r\n\r\n        return { clientToken };\r\n    }\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.submitted = false;\r\n\r\n        this.validator = new FormValidator\r\n            (\r\n                [\r\n                    {\r\n                        field: 'email',\r\n                        method: 'isEmpty',\r\n                        validWhen: false,\r\n                        message: 'Email is required.'\r\n                    },\r\n                    {\r\n                        field: 'email',\r\n                        method: 'isEmail',\r\n                        validWhen: true,\r\n                        message: 'That is not a valid email.'\r\n                    },\r\n                    {\r\n                        field: 'picture',\r\n                        method: 'isEmpty',\r\n                        validWhen: false,\r\n                        message: 'Please provide a profile picture'\r\n                    },\r\n                ]\r\n            )\r\n        this.state =\r\n            {\r\n                payment: this.props.user.user_metadata,\r\n                validation: this.validator.valid(),\r\n            };\r\n\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        e.preventDefault();\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const validation = this.validator.validate(this.state);\r\n        this.setState({ validation });\r\n        this.submitted = true;\r\n\r\n        const req = this.instance.tokenize()\r\n        if (validation.isValid) {\r\n            if (!this.state.payment) {\r\n                fetch('http://localhost:3000/api/braintree/v1/create_customer',\r\n                    {\r\n                        method: 'POST',\r\n                        headers:\r\n                        {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body:\r\n                        {\r\n                            nonce: req.nonce,\r\n                            postalCode: this.state.postalCode\r\n                        }\r\n                    }\r\n                )\r\n            }\r\n            else {\r\n                fetch('http://localhost:3000/api/braintree/v1/update_customer',\r\n                    {\r\n                        method: 'POST',\r\n                        headers:\r\n                        {\r\n                            'Content-Type': 'application/json',\r\n                        },\r\n                        body:\r\n                        {\r\n                            nonce: req.nonce,\r\n                            postalCode: this.state.postalCode\r\n                        }\r\n                    })\r\n            }\r\n\r\n            var bearer = 'Bearer ' + \"eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik5FUkRPREE1TlRCRk5UTkdRMFUwTVRVek1qaEZPVVF3T0RkRFFUTTVOa1ZGTlRaRk56azVSZyJ9.eyJpc3MiOiJodHRwczovL2Rldi1sdXFtNnV0eS5hdXRoMC5jb20vIiwic3ViIjoidTFTcU02MVRTenFMZzJFcndGbUlyN1VkMTA2ckFKVTBAY2xpZW50cyIsImF1ZCI6Imh0dHBzOi8vZGV2LWx1cW02dXR5LmF1dGgwLmNvbS9hcGkvdjIvIiwiaWF0IjoxNTY0MDg4NzAwLCJleHAiOjE1NjQxNzUxMDAsImF6cCI6InUxU3FNNjFUU3pxTGcyRXJ3Rm1JcjdVZDEwNnJBSlUwIiwic2NvcGUiOiJyZWFkOmNsaWVudF9ncmFudHMgY3JlYXRlOmNsaWVudF9ncmFudHMgZGVsZXRlOmNsaWVudF9ncmFudHMgdXBkYXRlOmNsaWVudF9ncmFudHMgcmVhZDp1c2VycyB1cGRhdGU6dXNlcnMgZGVsZXRlOnVzZXJzIGNyZWF0ZTp1c2VycyByZWFkOnVzZXJzX2FwcF9tZXRhZGF0YSB1cGRhdGU6dXNlcnNfYXBwX21ldGFkYXRhIGRlbGV0ZTp1c2Vyc19hcHBfbWV0YWRhdGEgY3JlYXRlOnVzZXJzX2FwcF9tZXRhZGF0YSBjcmVhdGU6dXNlcl90aWNrZXRzIHJlYWQ6Y2xpZW50cyB1cGRhdGU6Y2xpZW50cyBkZWxldGU6Y2xpZW50cyBjcmVhdGU6Y2xpZW50cyByZWFkOmNsaWVudF9rZXlzIHVwZGF0ZTpjbGllbnRfa2V5cyBkZWxldGU6Y2xpZW50X2tleXMgY3JlYXRlOmNsaWVudF9rZXlzIHJlYWQ6Y29ubmVjdGlvbnMgdXBkYXRlOmNvbm5lY3Rpb25zIGRlbGV0ZTpjb25uZWN0aW9ucyBjcmVhdGU6Y29ubmVjdGlvbnMgcmVhZDpyZXNvdXJjZV9zZXJ2ZXJzIHVwZGF0ZTpyZXNvdXJjZV9zZXJ2ZXJzIGRlbGV0ZTpyZXNvdXJjZV9zZXJ2ZXJzIGNyZWF0ZTpyZXNvdXJjZV9zZXJ2ZXJzIHJlYWQ6ZGV2aWNlX2NyZWRlbnRpYWxzIHVwZGF0ZTpkZXZpY2VfY3JlZGVudGlhbHMgZGVsZXRlOmRldmljZV9jcmVkZW50aWFscyBjcmVhdGU6ZGV2aWNlX2NyZWRlbnRpYWxzIHJlYWQ6cnVsZXMgdXBkYXRlOnJ1bGVzIGRlbGV0ZTpydWxlcyBjcmVhdGU6cnVsZXMgcmVhZDpydWxlc19jb25maWdzIHVwZGF0ZTpydWxlc19jb25maWdzIGRlbGV0ZTpydWxlc19jb25maWdzIHJlYWQ6ZW1haWxfcHJvdmlkZXIgdXBkYXRlOmVtYWlsX3Byb3ZpZGVyIGRlbGV0ZTplbWFpbF9wcm92aWRlciBjcmVhdGU6ZW1haWxfcHJvdmlkZXIgYmxhY2tsaXN0OnRva2VucyByZWFkOnN0YXRzIHJlYWQ6dGVuYW50X3NldHRpbmdzIHVwZGF0ZTp0ZW5hbnRfc2V0dGluZ3MgcmVhZDpsb2dzIHJlYWQ6c2hpZWxkcyBjcmVhdGU6c2hpZWxkcyBkZWxldGU6c2hpZWxkcyByZWFkOmFub21hbHlfYmxvY2tzIGRlbGV0ZTphbm9tYWx5X2Jsb2NrcyB1cGRhdGU6dHJpZ2dlcnMgcmVhZDp0cmlnZ2VycyByZWFkOmdyYW50cyBkZWxldGU6Z3JhbnRzIHJlYWQ6Z3VhcmRpYW5fZmFjdG9ycyB1cGRhdGU6Z3VhcmRpYW5fZmFjdG9ycyByZWFkOmd1YXJkaWFuX2Vucm9sbG1lbnRzIGRlbGV0ZTpndWFyZGlhbl9lbnJvbGxtZW50cyBjcmVhdGU6Z3VhcmRpYW5fZW5yb2xsbWVudF90aWNrZXRzIHJlYWQ6dXNlcl9pZHBfdG9rZW5zIGNyZWF0ZTpwYXNzd29yZHNfY2hlY2tpbmdfam9iIGRlbGV0ZTpwYXNzd29yZHNfY2hlY2tpbmdfam9iIHJlYWQ6Y3VzdG9tX2RvbWFpbnMgZGVsZXRlOmN1c3RvbV9kb21haW5zIGNyZWF0ZTpjdXN0b21fZG9tYWlucyByZWFkOmVtYWlsX3RlbXBsYXRlcyBjcmVhdGU6ZW1haWxfdGVtcGxhdGVzIHVwZGF0ZTplbWFpbF90ZW1wbGF0ZXMgcmVhZDptZmFfcG9saWNpZXMgdXBkYXRlOm1mYV9wb2xpY2llcyByZWFkOnJvbGVzIGNyZWF0ZTpyb2xlcyBkZWxldGU6cm9sZXMgdXBkYXRlOnJvbGVzIHJlYWQ6cHJvbXB0cyB1cGRhdGU6cHJvbXB0cyByZWFkOmJyYW5kaW5nIHVwZGF0ZTpicmFuZGluZyIsImd0eSI6ImNsaWVudC1jcmVkZW50aWFscyJ9.X4yHzULntm8SLMOhIAn8oKRhCqFM7iy0DpTBS2Dz6RPwK8F0MKdYwTBPlmzzQtwRR9pt-3ewdtz5OzZRBGoD7mgzorNyKbOroGuXdYNvVutBbdWKu3cIjfEQDU_7s6N4GmT7XZzI36u_4vyRr6chCXz9RCxvupFtP0UMx5OYhIeWeuaqBh43nSjlNd5xWohkXcHTYj6XPrMH73DHN_ZhmdqPDs8j1I9XWwrjlV_Fu034DXhgka4QHu5yvpE2ftuR2VhNsyrDAU3Aep9S1DHOUUdS4eZmyx-rhLqI49U4B6D8opmxnLwGA67Iqh-HgEsx3Gbx5iZ_jkD32J2ABzY7Pg\";\r\n            var update = 'https://dev-luqm6uty.auth0.com/api/v2/users/'\r\n            update += this.props.user.user_id\r\n            fetch(update,\r\n                {\r\n                    mode: 'cors',\r\n                    method: 'POST',\r\n                    headers:\r\n                    {\r\n                        'Content-Type': 'application/json',\r\n                        'authorization': bearer,\r\n                        'accept': 'application/json'\r\n                    },\r\n                    body: {\r\n                        \r\n                        \"user_metadata\": {\r\n                            'braintree': this.state.payment,\r\n                        },\r\n                    },\r\n                    credentials: \"include\"\r\n                })\r\n\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let validation = this.submitted ?\r\n            this.validator.validate(this.state) :\r\n            this.state.validation\r\n\r\n        return (\r\n\r\n            <div className='container'>\r\n                <h1>Payment Information:</h1>\r\n                <BraintreeHostedFields\r\n                    className=\"drop-in-container\"\r\n                    options={{\r\n                        authorization: this.props.clientToken\r\n                    }}\r\n                    onInstance={(instance) => (this.instance = instance)}\r\n                >\r\n                    <form id=\"cardForm\" onSubmit={this.handleSubmit}>\r\n\r\n                        <label className=\"hosted-fields--label\">Card Number</label>\r\n                        <div id=\"card-number\" className=\"hosted-field\"></div>\r\n\r\n                        <label className=\"hosted-fields--label\">Expiration Date</label>\r\n                        <div id=\"expiration-date\" className=\"hosted-field\"></div>\r\n\r\n                        <label className=\"hosted-fields--label\">CVV</label>\r\n                        <div id=\"cvv\" className=\"hosted-field\"></div>\r\n\r\n                        <label className=\"hosted-fields--label\">Postal Code</label>\r\n                        <div id=\"postal-code\" className=\"hosted-field\"></div>\r\n\r\n                        <input className=\"btn btn-dark\" type='submit' value='Save Changes' />\r\n                    </form>\r\n                </BraintreeHostedFields>\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default ProfileEdit;"]},"metadata":{},"sourceType":"module"}